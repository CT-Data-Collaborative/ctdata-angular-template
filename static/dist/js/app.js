var app=angular.module("app",["ngAnimate","ui.bootstrap","ngLodash"]);angular.module("app").controller("DataVizController",["$scope","$http","$log","sidebarDisplay","categories","lodash",function(e,t,a,o,n,l){e.toggle=o.toggle,e.categories=n.list,e.$watch(function(){return e.categories},function(){console.log("Selection Detected")},!0)}]),angular.module("app").directive("simpletable",function(){var e=tableChart();return{restrict:"E",scope:{data:"=data"},link:function(t,a,o){t.$watchCollection("data",function(t){d3.select(a[0]).datum(t).call(e)})}}}),angular.module("app").service("categories",["lodash",function(e){var t={};return t.list=[{name:"Volunteering & Giving",selected:!0,icon:"fa fa-gavel"},{name:"Voting & Registration",selected:!0,icon:"fa fa-gavel"},{name:"Interaction with Neighbors",selected:!0,icon:"fa fa-gavel"},{name:"Communication with Friends and Family",selected:!0,icon:"fa fa-gavel"},{name:"Political Involvement",selected:!0,icon:"fa fa-gavel"}],t.toggle=function(a){position=e.findIndex(t.list,function(e){return e.name==a.name}),t.list[position].selected=!t.list[position].selected},t}]),angular.module("app").controller("SidebarController",["$scope","$log","lodash","categories",function(e,t,a,o){e.status={isopen:!1},e.categories=o.list,e.updateSelected=function(e){o.toggle(e)},e.checkSelected=function(e){return e?"selected":"deselected"}}]),angular.module("app").service("sidebarDisplay",function(){return{toggle:{toggled:!1}}}),angular.module("app").controller("WrapController",["$scope","sidebarDisplay",function(e,t){e.toggle=t.toggle}]);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZHVsZS5qcyIsImRhdGF2aXovZGF0YXZpei5jb250cm9sbGVyLmpzIiwiZGF0YXZpei9zaW1wbGV0YWJsZS5kaXJlY3RpdmUuanMiLCJzaWRlYmFyL2NhdGVnb3JpZXMuc2VydmljZS5qcyIsInNpZGViYXIvc2lkZWJhci5jb250cm9sbGVyLmpzIiwic2lkZWJhci9zaWRlYmFyZGlzcGxheS5zZXJ2aWNlLmpzIiwic2lkZWJhci93cmFwLmNvbnRyb2xsZXIuanMiXSwibmFtZXMiOlsiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsImNvbnRyb2xsZXIiLCIkc2NvcGUiLCIkaHR0cCIsIiRsb2ciLCJzaWRlYmFyRGlzcGxheSIsImNhdGVnb3JpZXMiLCJsb2Rhc2giLCJ0b2dnbGUiLCJsaXN0IiwiJHdhdGNoIiwiY29uc29sZSIsImxvZyIsImRpcmVjdGl2ZSIsImNoYXJ0IiwidGFibGVDaGFydCIsInJlc3RyaWN0Iiwic2NvcGUiLCJkYXRhIiwibGluayIsImVsZW1lbnQiLCJhdHRycyIsIiR3YXRjaENvbGxlY3Rpb24iLCJkMyIsInNlbGVjdCIsImRhdHVtIiwiY2FsbCIsInNlcnZpY2UiLCJuYW1lIiwic2VsZWN0ZWQiLCJpY29uIiwiY2F0ZWdvcnkiLCJwb3NpdGlvbiIsImZpbmRJbmRleCIsImxpc3RjYXQiLCJzdGF0dXMiLCJpc29wZW4iLCJ1cGRhdGVTZWxlY3RlZCIsImNoZWNrU2VsZWN0ZWQiLCJib29sIiwidG9nZ2xlZCJdLCJtYXBwaW5ncyI6IkFBQUEsR0FBQUEsS0FBQUMsUUFBQUMsT0FBQSxPQUNBLFlBQ0EsZUFDQSxZQ0hBRCxTQUFBQyxPQUFBLE9BQ0FDLFdBQUEscUJBQ0EsU0FBQSxRQUFBLE9BQUEsaUJBQUEsYUFBQSxTQUNBLFNBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEdBRUFMLEVBQUFNLE9BQUFILEVBQUFHLE9BQ0FOLEVBQUFJLFdBQUFBLEVBQUFHLEtBRUFQLEVBQUFRLE9BQUEsV0FDQSxNQUFBUixHQUFBSSxZQUNBLFdBQ0FLLFFBQUFDLElBQUEsd0JBQ0EsTUNaQWIsUUFBQUMsT0FBQSxPQUNBYSxVQUFBLGNBQUEsV0FFQSxHQUFBQyxHQUFBQyxZQUNBLFFBQ0FDLFNBQUEsSUFDQUMsT0FDQUMsS0FBQSxTQUVBQyxLQUFBLFNBQUFGLEVBQUFHLEVBQUFDLEdBQ0FKLEVBQUFLLGlCQUFBLE9BQUEsU0FBQUosR0FDQUssR0FBQUMsT0FBQUosRUFBQSxJQUFBSyxNQUFBUCxHQUFBUSxLQUFBWixTQ1hBZixRQUFBQyxPQUFBLE9BQ0EyQixRQUFBLGNBQUEsU0FBQSxTQUFBcEIsR0FDQSxHQUFBRCxLQWNBLE9BYkFBLEdBQUFHLE9BQ0FtQixLQUFBLHdCQUFBQyxVQUFBLEVBQUFDLEtBQUEsZ0JBQ0FGLEtBQUEsd0JBQUFDLFVBQUEsRUFBQUMsS0FBQSxnQkFDQUYsS0FBQSw2QkFBQUMsVUFBQSxFQUFBQyxLQUFBLGdCQUNBRixLQUFBLHdDQUFBQyxVQUFBLEVBQUFDLEtBQUEsZ0JBQ0FGLEtBQUEsd0JBQUFDLFVBQUEsRUFBQUMsS0FBQSxnQkFFQXhCLEVBQUFFLE9BQUEsU0FBQXVCLEdBQ0FDLFNBQUF6QixFQUFBMEIsVUFBQTNCLEVBQUFHLEtBQUEsU0FBQXlCLEdBQ0EsTUFBQUEsR0FBQU4sTUFBQUcsRUFBQUgsT0FFQXRCLEVBQUFHLEtBQUF1QixVQUFBSCxVQUFBdkIsRUFBQUcsS0FBQXVCLFVBQUFILFVBRUF2QixLQ2hCQVAsUUFBQUMsT0FBQSxPQUNBQyxXQUFBLHFCQUNBLFNBQUEsT0FBQSxTQUFBLGFBQ0EsU0FBQUMsRUFBQUUsRUFBQUcsRUFBQUQsR0FDQUosRUFBQWlDLFFBQ0FDLFFBQUEsR0FHQWxDLEVBQUFJLFdBQUFBLEVBQUFHLEtBVUFQLEVBQUFtQyxlQUFBLFNBQUFOLEdBQ0F6QixFQUFBRSxPQUFBdUIsSUFFQTdCLEVBQUFvQyxjQUFBLFNBQUFDLEdBQ0EsTUFBQUEsR0FDQSxXQUVBLGlCQ3pCQXhDLFFBQUFDLE9BQUEsT0FDQTJCLFFBQUEsaUJBQUEsV0FDQSxPQUNBbkIsUUFBQWdDLFNBQUEsTUNIQXpDLFFBQUFDLE9BQUEsT0FDQUMsV0FBQSxrQkFBQSxTQUFBLGlCQUFBLFNBQUFDLEVBQUFHLEdBQ0FILEVBQUFNLE9BQUFILEVBQUFHIiwiZmlsZSI6ImFwcC5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciBhcHAgPSBhbmd1bGFyLm1vZHVsZSgnYXBwJywgW1xuICAgICduZ0FuaW1hdGUnLFxuICAgICd1aS5ib290c3RyYXAnLFxuICAgICduZ0xvZGFzaCdcbiAgICBdKTtcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLmNvbnRyb2xsZXIoJ0RhdGFWaXpDb250cm9sbGVyJyxcbiAgICBbJyRzY29wZScsICckaHR0cCcsICckbG9nJywgJ3NpZGViYXJEaXNwbGF5JywgJ2NhdGVnb3JpZXMnLCAnbG9kYXNoJyxcbiAgICBmdW5jdGlvbigkc2NvcGUsICRodHRwLCAkbG9nLCBzaWRlYmFyRGlzcGxheSwgY2F0ZWdvcmllcywgbG9kYXNoKXtcbiAgICAgICAgdmFyIGxvID0gbG9kYXNoO1xuICAgICAgICAkc2NvcGUudG9nZ2xlID0gc2lkZWJhckRpc3BsYXkudG9nZ2xlO1xuICAgICAgICAkc2NvcGUuY2F0ZWdvcmllcyA9IGNhdGVnb3JpZXMubGlzdDtcblxuICAgICAgICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgcmV0dXJuICRzY29wZS5jYXRlZ29yaWVzO1xuICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiU2VsZWN0aW9uIERldGVjdGVkXCIpO1xuICAgICAgICB9LCB0cnVlKTtcbn1dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uZGlyZWN0aXZlKCdzaW1wbGV0YWJsZScsIGZ1bmN0aW9uKCkge1xuICAgIC8vIFRoaXMgZnVuY3Rpb24gc2hvdWxkIHJlZmxlY3Qgd2hhdGV2ZXIgeW91ciBkMyB0YWJsZSBmdW5jdGlvbiBpcyBjYWxsZWRcbiAgICB2YXIgY2hhcnQgPSB0YWJsZUNoYXJ0KCk7XG4gICAgcmV0dXJuICB7XG4gICAgICAgIHJlc3RyaWN0OiAnRScsXG4gICAgICAgIHNjb3BlOiB7XG4gICAgICAgICAgICBkYXRhOiBcIj1kYXRhXCJcbiAgICAgICAgfSxcbiAgICAgICAgbGluazogZnVuY3Rpb24oc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICAgICAgICBzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCdkYXRhJywgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICAgIGQzLnNlbGVjdChlbGVtZW50WzBdKS5kYXR1bShkYXRhKS5jYWxsKGNoYXJ0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgfVxufSlcbiIsImFuZ3VsYXIubW9kdWxlKCdhcHAnKVxuLnNlcnZpY2UoJ2NhdGVnb3JpZXMnLCBbJ2xvZGFzaCcsIGZ1bmN0aW9uKGxvZGFzaCkge1xuICAgIHZhciBjYXRlZ29yaWVzID0ge307XG4gICAgY2F0ZWdvcmllcy5saXN0ID0gW1xuICAgICAgICB7J25hbWUnOiAnVm9sdW50ZWVyaW5nICYgR2l2aW5nJywgJ3NlbGVjdGVkJzogdHJ1ZSwgJ2ljb24nOiAnZmEgZmEtZ2F2ZWwnfSxcbiAgICAgICAgeyduYW1lJzogJ1ZvdGluZyAmIFJlZ2lzdHJhdGlvbicsICdzZWxlY3RlZCc6IHRydWUsICdpY29uJzogJ2ZhIGZhLWdhdmVsJ30sXG4gICAgICAgIHsnbmFtZSc6ICdJbnRlcmFjdGlvbiB3aXRoIE5laWdoYm9ycycsICdzZWxlY3RlZCc6IHRydWUsICdpY29uJzogJ2ZhIGZhLWdhdmVsJ30sXG4gICAgICAgIHsnbmFtZSc6ICdDb21tdW5pY2F0aW9uIHdpdGggRnJpZW5kcyBhbmQgRmFtaWx5JywgJ3NlbGVjdGVkJzogdHJ1ZSwgJ2ljb24nOiAnZmEgZmEtZ2F2ZWwnfSxcbiAgICAgICAgeyduYW1lJzogJ1BvbGl0aWNhbCBJbnZvbHZlbWVudCcsICdzZWxlY3RlZCc6IHRydWUsICdpY29uJzogJ2ZhIGZhLWdhdmVsJ31cbiAgICBdO1xuICAgIGNhdGVnb3JpZXMudG9nZ2xlID0gZnVuY3Rpb24oY2F0ZWdvcnkpIHtcbiAgICAgICAgcG9zaXRpb24gPSBsb2Rhc2guZmluZEluZGV4KGNhdGVnb3JpZXMubGlzdCwgZnVuY3Rpb24obGlzdGNhdCkge1xuICAgICAgICAgICAgcmV0dXJuIGxpc3RjYXQubmFtZSA9PSBjYXRlZ29yeS5uYW1lO1xuICAgICAgICB9KTtcbiAgICAgICAgY2F0ZWdvcmllcy5saXN0W3Bvc2l0aW9uXS5zZWxlY3RlZCA9ICFjYXRlZ29yaWVzLmxpc3RbcG9zaXRpb25dLnNlbGVjdGVkO1xuICAgIH1cbiAgICByZXR1cm4gY2F0ZWdvcmllcztcbn1dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uY29udHJvbGxlcignU2lkZWJhckNvbnRyb2xsZXInLFxuICAgIFsnJHNjb3BlJywgJyRsb2cnLCAnbG9kYXNoJywgJ2NhdGVnb3JpZXMnLFxuICAgIGZ1bmN0aW9uKCRzY29wZSwgJGxvZywgbG9kYXNoLCBjYXRlZ29yaWVzKSB7XG4gICAgICAgICRzY29wZS5zdGF0dXMgPSB7XG4gICAgICAgICAgICBpc29wZW46IGZhbHNlXG4gICAgICAgIH07XG5cbiAgICAgICAgJHNjb3BlLmNhdGVnb3JpZXMgPSBjYXRlZ29yaWVzLmxpc3Q7XG5cbiAgICAgICAgLy8gTm90ZTogVGhpcyBpbml0aWFsIHNlcnZpY2UgYW5kIGNvbnRyb2xsZXJcbiAgICAgICAgLy8gd2FzIGRldmVsb3BlZCBmb3IgdGhlIHRvd24gcHJvZmlsZSB0b3duL2NvdW50eVxuICAgICAgICAvLyBsb29rdXAgcHJvY2Vzcy4gSSBoYWQgYW4gZXh0cmEgc2VydmljZSBpbiB0aGlzXG4gICAgICAgIC8vIGNvbXBvbmVudCB0aGF0IGxvYWRlZCB0aG9zZSBmcm9tIGEgY3N2IGFuZCBoYWRcbiAgICAgICAgLy8gYWRkaXRpb25hbCBwcm9jZXNzaW5nLiBUaGUgd2F5IHRoYXQgdGhpcyBmdW5jdGlvbmFsaXR5XG4gICAgICAgIC8vIHdvcmtzIG1pZ2h0IG5vdCBxdWl0ZSBiZSB0aGUgc2FtZSB3aXRob3V0LiBTcGVjaWZpY2FsbHlcbiAgICAgICAgLy8gd2hhdCBpcyBnZXR0aW5nIHBhc3NlZCBpbiB0byB0aGUgdXBkYXRlU2VsZWN0ZWQgZnVuY3Rpb25cbiAgICAgICAgLy8gbWlnaHQgbmVlZCB0d2Vha2luZ1xuICAgICAgICAkc2NvcGUudXBkYXRlU2VsZWN0ZWQgPSBmdW5jdGlvbihjYXRlZ29yeSkge1xuICAgICAgICAgICAgY2F0ZWdvcmllcy50b2dnbGUoY2F0ZWdvcnkpO1xuICAgICAgICB9XG4gICAgICAgICRzY29wZS5jaGVja1NlbGVjdGVkID0gZnVuY3Rpb24oYm9vbCkge1xuICAgICAgICAgICAgaWYgKGJvb2wpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJzZWxlY3RlZFwiO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXCJkZXNlbGVjdGVkXCI7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbn1dKVxuIiwiYW5ndWxhci5tb2R1bGUoJ2FwcCcpXG4uc2VydmljZSgnc2lkZWJhckRpc3BsYXknLCBmdW5jdGlvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0b2dnbGU6IHsgdG9nZ2xlZDogZmFsc2UgfVxuICAgIH1cbn0pXG4iLCJhbmd1bGFyLm1vZHVsZSgnYXBwJylcbi5jb250cm9sbGVyKCdXcmFwQ29udHJvbGxlcicsIFsnJHNjb3BlJywgJ3NpZGViYXJEaXNwbGF5JywgZnVuY3Rpb24oJHNjb3BlLCBzaWRlYmFyRGlzcGxheSkge1xuICAgICRzY29wZS50b2dnbGUgPSBzaWRlYmFyRGlzcGxheS50b2dnbGU7XG59XSlcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
